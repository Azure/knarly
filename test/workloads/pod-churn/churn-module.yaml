# Cluster loader 2 module, for one phase of "churn"
# In a phase of churn, we shut down all the pods with one name pattern, and concurrently start up another with a new name patter
#
# We have to do it in phases like this because deletion in CL2 is name-based, and so we need the things we are deleting right now
# to have a different 'base name' from the things we are creating.

{{$previousRoundNum := SubtractInt .roundNumber 1}}

steps:
- name: Test - churn (round {{$.roundNumber}})
  phases:  # phases run concurrently if they are within the same step
  - namespaceRange:
      min: 1
      max: 1
    replicasPerNamespace: 0
    tuningSet: TargetDeleteQps  # (reference to tuning set from containing file)
    objectBundle:
    - basename: pods-set-{{$previousRoundNum}}-instance  # delete the previous set
      objectTemplatePath: "naked-pod.yaml"
  - namespaceRange:
      min: 1
      max: 1
    replicasPerNamespace: {{$.replicas}} 
    tuningSet: TargetCreateQps # (reference to tuning set from containing file)
    objectBundle:
    - basename: pods-set-{{$.roundNumber}}-instance  # create the new set
      objectTemplatePath: "naked-pod.yaml"
      templateFillMap:
        testRound: r{{$.roundNumber}}
- name: Test - wait for all pods from round {{$.roundNumber}} to start running # otherwise we'll just delete them in the next round before they have even started running, but we'd rather exercise the full pod lifecycle
  measurements:
  - Identifier: WaitForRunningPods  # unlike WaitForControlledPods, this does not seem to require separate setup and gather phases
    Method: WaitForRunningPods
    Params:
      desiredPodCount: {{$.replicas}} 
      labelSelector: test-round = r{{$.roundNumber}}
      timeout: 10m # we don't ever really want it to hit the timeout
